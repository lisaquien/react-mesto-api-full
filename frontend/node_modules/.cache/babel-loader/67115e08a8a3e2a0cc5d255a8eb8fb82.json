{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _getApiResponse() {\n    return res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(res.status);\n    };\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._getApiResponse());\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._getApiResponse());\n  }\n  editUserInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._getApiResponse());\n  }\n  postNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._getApiResponse());\n  }\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getApiResponse());\n  }\n  changeLikeState(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: isLiked ? \"DELETE\" : \"PUT\",\n      headers: this._headers\n    }).then(this._getApiResponse());\n  }\n  editProfilePicture(_ref4) {\n    let {\n      avatar\n    } = _ref4;\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._getApiResponse());\n  }\n}\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    authorization: `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_getApiResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","editUserInfo","name","about","method","body","JSON","stringify","postNewCard","link","removeCard","cardId","changeLikeState","isLiked","editProfilePicture","avatar","api","authorization","token"],"sources":["C:/Users/фыгы/Desktop/praktikum/react-mesto-api-full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getApiResponse() {\r\n    return res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n    \r\n      return Promise.reject(res.status);\r\n    }\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch((`${this._baseUrl}/users/me`), {\r\n      headers: this._headers\r\n    })\r\n      .then(this._getApiResponse())\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch((`${this._baseUrl}/cards`), {\r\n      headers: this._headers\r\n    })\r\n    \r\n      .then(this._getApiResponse())\r\n  }\r\n\r\n  editUserInfo({ name, about }) {\r\n    return fetch((`${this._baseUrl}/users/me`), {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ name, about })\r\n    })\r\n\r\n      .then(this._getApiResponse())\r\n  }\r\n\r\n  postNewCard({ name, link }) {\r\n    return fetch((`${this._baseUrl}/cards`), {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ name, link })\r\n    })\r\n    \r\n      .then(this._getApiResponse())\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return fetch((`${this._baseUrl}/cards/${cardId}`), {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(this._getApiResponse())\r\n  }\r\n\r\n  changeLikeState(cardId, isLiked) {\r\n    return fetch((`${this._baseUrl}/cards/${cardId}/likes`), {\r\n      method: isLiked ? \"DELETE\" : \"PUT\",\r\n      headers: this._headers\r\n    })\r\n\r\n      .then(this._getApiResponse())\r\n  }\r\n\r\n  editProfilePicture({ avatar }) {\r\n    return fetch((`${this._baseUrl}/users/me/avatar`), {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ avatar })\r\n    })\r\n      \r\n      .then(this._getApiResponse())\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'http://localhost:3000',\r\n  headers: {\r\n    authorization: `Bearer ${token}`,\r\n    'Content-Type': 'application/json'\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}